name: Users
type: object
key: user_id
data:
 min: 1
 max: 10
 pre_run: |
   globals.user_counter = 0;
properties:
 user_id:
   type: string
   description: The users id
   data:
     #build: "faker.random.uuid();"
     build: "++globals.user_counter"
 first_name:
   type: string
   description: The users first name
   data:
     fake: "{{name.firstName}}"
 last_name:
   type: string
   description: The users last name
   data:
     fake: "{{name.lastName}}"
 gender:
   type: string
   description: The users username
   data:
     fake: "{{internet.userName}}"
 username:
   type: string
   description: The users username
   data:
     fake: "{{internet.userName}}"
 email_address:
   type: string
   description: The users email address
   data:
     fake: "{{internet.email}}"
 home_phone:
   type: string
   description: The users home phone
   data:
     fake: "{{phone.phoneNumber}}"
     post_build: "this.home_phone.replace(/x[0-9]+$/, '')"
 mobile_phone:
   type: string
   description: The users mobile phone
   data:
     fake: "{{phone.phoneNumber}}"
     post_build: "this.mobile_phone.replace(/x[0-9]+$/, '')"
 addresses:
   type: array
   description: An array of addresses
   data:
     build: |
       const addresses = [];
       for (let i = 0, rand = chance.integer({ min: 1, max: 3 }); i < rand; i++) {
         addresses.push({
           address_name: faker.random.arrayElement([ 'Home', 'Work', 'Other' ]),
           street: `${faker.address.streetAddress()} ${faker.address.streetSuffix()}`,
           locality: faker.address.city(),
           region: faker.address.stateAbbr(),
           zipcode: faker.address.zipCode(),
           country: 'US'
         });
       }
       return addresses;
 created_on:
   type: integer
   description: An epoch time of when the user was created
   data:
     fake: "{{date.past}}"
     post_build: "new Date(this.created_on).getTime();"
 register_date:
   type: integer
   description: An epoch time of when the user was created
   data:
     fake: "{{date.past}}"
     post_build: "new Date(this.created_on).getTime();"
